{
  "_args": [
    [
      {
        "raw": "logan@~0.0.2",
        "scope": null,
        "escapedName": "logan",
        "name": "logan",
        "rawSpec": "~0.0.2",
        "spec": ">=0.0.2 <0.1.0",
        "type": "range"
      },
      "/Users/arumugavelans/Desktop/scatter_plot/node_modules/json-server"
    ]
  ],
  "_from": "logan@>=0.0.2 <0.1.0",
  "_id": "logan@0.0.2",
  "_inCache": true,
  "_location": "/logan",
  "_npmUser": {
    "name": "typicode",
    "email": "typicode@gmail.com"
  },
  "_npmVersion": "1.3.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "logan@~0.0.2",
    "scope": null,
    "escapedName": "logan",
    "name": "logan",
    "rawSpec": "~0.0.2",
    "spec": ">=0.0.2 <0.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/json-server"
  ],
  "_resolved": "https://registry.npmjs.org/logan/-/logan-0.0.2.tgz",
  "_shasum": "bb7096fd860afd119045d942e91b74d156b32051",
  "_shrinkwrap": null,
  "_spec": "logan@~0.0.2",
  "_where": "/Users/arumugavelans/Desktop/scatter_plot/node_modules/json-server",
  "author": {
    "name": "Typicode"
  },
  "bugs": {
    "url": "https://github.com/typicode/logan/issues"
  },
  "dependencies": {
    "colors": "*"
  },
  "description": "Mini template system for the console and colors",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "bb7096fd860afd119045d942e91b74d156b32051",
    "tarball": "https://registry.npmjs.org/logan/-/logan-0.0.2.tgz"
  },
  "homepage": "https://github.com/typicode/logan",
  "keywords": [
    "colors",
    "console",
    "log",
    "template"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "typicode",
      "email": "typicode@gmail.com"
    }
  ],
  "name": "logan",
  "optionalDependencies": {},
  "readme": "# Logan\n\n![](http://i.imgur.com/xg4wt5j.png)\n\nLogan is a mini template system for the console and [colors](https://github.com/Marak/colors.js). \n\nIt allows to cleanly separate content from style and create beautiful logging functions.\n\n## Example\n\nLet's say you want to write a logging function that says hello.\n\n```javascript\n// Without Logan\nfunction hello(arg) {\n  console.log('Hello'.bold.green + ' : ' + arg.cyan);\n}\n\n// With Logan\nvar hello = logan.create('Hello : %', 'bold.green . cyan')\n\nhello('world');\n```\n\n![](http://i.imgur.com/4I6nDTp.png)\n\n## Usage\n\n```javascript\nvar logan = require('logan');\n```\n\n### set\n\nThis is the most useful method of logan. It lets you define all your templates in one place.\n\n```javascript\nlogan.set({\n  info: ['info : %', 'yellow'],\n  warn: ['warn : %', 'orange'],\n  omg : ['omg  : %', 'rainbow']\n});\n\nlogan.info('some info');\n```\n\nNotice how easy it is to see what all your logging functions will output.\n\nAlso, with ```set``` your module users can easily theme logs:\n\n```javascript\n// Overriding omg to be... more OMG!!!\nlogan.set({\n  omg: ['OMG : % !!!', 'red . . red']\n});\n```\n\n### create\n\nReturns a logging function.\n\n```javascript\nvar info = logan.create('info : %', 'yellow');\ninfo('some text');\n```\n\n### compile\n\nReturns a function which returns a string when called.\n\n```javascript\nvar info = logan.compile('info : %', 'yellow');\nconsole.log(info('some text'));\n```\n\n## Syntax\n\n* **%** is used for string replacement.\n* **{}** lets you define blocks.\n* **.** means default style.\n* styles can be chained (example: bold.underline.red).\n\n**{}** usage:\n\n```javascript\n// for example, instead of writing this:\nvar green = logan.create('some long green string', 'green green green green');\n\n// using {} you can write\nvar green = logan.create('{some long green string}', 'green');\n```\n\n## Configuration\n\nIf you want to suppress all output, during tests for example, just set ```silent``` to ```true```.\n\n```javascript\nlogan.set({'foo', ['foo', 'red']});\nlogan.silent = true;\nlogan.foo(); // No output\nlogan.silent = false;\nlogan.foo(): // will output 'foo'\n```\n\n## About the name\n\nSince there's a templating engine called [hogan](http://twitter.github.io/hogan.js/) and this one is about logging, it was called logan.\n\n## More\n\nIf you want to see how Logan can be used in another project, you can have a look at [ShoutJS](https://github.com/typicode/shoutjs).",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/typicode/logan.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "0.0.2"
}
